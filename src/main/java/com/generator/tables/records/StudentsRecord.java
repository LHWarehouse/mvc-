/*
 * This file is generated by jOOQ.
*/
package com.generator.tables.records;


import com.generator.tables.Students;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentsRecord extends UpdatableRecordImpl<StudentsRecord> implements Record6<Integer, String, Boolean, LocalDateTime, String, String> {

    private static final long serialVersionUID = 1703216527;

    /**
     * Setter for <code>studentdb.students.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>studentdb.students.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>studentdb.students.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>studentdb.students.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>studentdb.students.sex</code>.
     */
    public void setSex(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>studentdb.students.sex</code>.
     */
    public Boolean getSex() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>studentdb.students.birth</code>.
     */
    public void setBirth(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>studentdb.students.birth</code>.
     */
    public LocalDateTime getBirth() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>studentdb.students.phone</code>.
     */
    public void setPhone(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>studentdb.students.phone</code>.
     */
    public String getPhone() {
        return (String) get(4);
    }

    /**
     * Setter for <code>studentdb.students.addr</code>.
     */
    public void setAddr(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>studentdb.students.addr</code>.
     */
    public String getAddr() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, Boolean, LocalDateTime, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, Boolean, LocalDateTime, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Students.STUDENTS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Students.STUDENTS.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field3() {
        return Students.STUDENTS.SEX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field4() {
        return Students.STUDENTS.BIRTH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Students.STUDENTS.PHONE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Students.STUDENTS.ADDR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value3() {
        return getSex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value4() {
        return getBirth();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getPhone();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getAddr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentsRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentsRecord value3(Boolean value) {
        setSex(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentsRecord value4(LocalDateTime value) {
        setBirth(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentsRecord value5(String value) {
        setPhone(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentsRecord value6(String value) {
        setAddr(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentsRecord values(Integer value1, String value2, Boolean value3, LocalDateTime value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StudentsRecord
     */
    public StudentsRecord() {
        super(Students.STUDENTS);
    }

    /**
     * Create a detached, initialised StudentsRecord
     */
    public StudentsRecord(Integer id, String name, Boolean sex, LocalDateTime birth, String phone, String addr) {
        super(Students.STUDENTS);

        set(0, id);
        set(1, name);
        set(2, sex);
        set(3, birth);
        set(4, phone);
        set(5, addr);
    }
}
